# tabnavigator

-tabstyle is style for each tab.
-ScreenOptions is for all tabs


<Tabs.Navigator
    screenOptions={{
    headerShown: false,
    tabBarShowLabel: false,
    tabBarStyle: {
        backgroundColor: "black",
        borderTopColor: "rgba(255,255,255,0.5)",
    },
    tabBarActiveTintColor: "white",
    tabBarInactiveTintColor: "grey",
    }}
>

# stacknavigator in tabnavigator
- use children in tab navigator <>


# ScrollView
- scroll up and down
- just rendering all of them which may be bad performance

# flatList
- performance good

- infinite scroll
-- get fetchmore from query
-- from backend set set take with a number and skip with offset param
-- attributes
onEndReachedThreshold={0.05}
onEndReached={() => {
console.log("fetching more");
return fetchMore({
variables: {
    offset: data?.seeFeed?.length,
},
});
}}

-- set typepolicies in cache of apollo client
  cache: new InMemoryCache({
    typePolicies: {
      Query: {
        fields: {
          seeFeed: offsetLimitPagination(),
        },
      },
    },
  }),


# cache persistance
- store data into cache so you do not have to load everytime

- install
npm i apollo3-cache-persist

- export cache
export const cache = new InMemoryCache({
  typePolicies: {
    Query: {
      fields: {
        seeFeed: offsetLimitPagination(),
      },
    },
  },
});
const client = new ApolloClient({
  link: authLink.concat(httpLink),
  cache,
});


- put the cache into storage in App.js
await persistCache({
    cache,
    storage: new AsyncStorageWrapper(AsyncStorage),
});